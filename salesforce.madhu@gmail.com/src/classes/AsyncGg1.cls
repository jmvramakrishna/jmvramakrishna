//Generated by wsdl2apex

public class AsyncGg1 {
    public class m1Response_elementFuture extends System.WebServiceCalloutFuture {
        public void getValue() {
            System.WebServiceCallout.endInvoke(this);
        }
    }
    public class Asyncg1 {
        public String endpoint_x = 'https://ap5.salesforce.com/services/Soap/class/g1';
        public Map<String,String> inputHttpHeaders_x;
        public String clientCertName_x;
        public Integer timeout_x;
        public gg1.AllowFieldTruncationHeader_element AllowFieldTruncationHeader;
        public gg1.SessionHeader_element SessionHeader;
        public gg1.DebuggingHeader_element DebuggingHeader;
        public gg1.DebuggingInfo_element DebuggingInfo;
        public gg1.CallOptions_element CallOptions;
        private String AllowFieldTruncationHeader_hns = 'AllowFieldTruncationHeader=http://soap.sforce.com/schemas/class/g1';
        private String SessionHeader_hns = 'SessionHeader=http://soap.sforce.com/schemas/class/g1';
        private String DebuggingHeader_hns = 'DebuggingHeader=http://soap.sforce.com/schemas/class/g1';
        private String DebuggingInfo_hns = 'DebuggingInfo=http://soap.sforce.com/schemas/class/g1';
        private String CallOptions_hns = 'CallOptions=http://soap.sforce.com/schemas/class/g1';
        private String[] ns_map_type_info = new String[]{'http://soap.sforce.com/schemas/class/g1', 'gg1'};
        public AsyncGg1.m1Response_elementFuture beginM1(System.Continuation continuation) {
            gg1.m1_element request_x = new gg1.m1_element();
            return (AsyncGg1.m1Response_elementFuture) System.WebServiceCallout.beginInvoke(
              this,
              request_x,
              AsyncGg1.m1Response_elementFuture.class,
              continuation,
              new String[]{endpoint_x,
              '',
              'http://soap.sforce.com/schemas/class/g1',
              'm1',
              'http://soap.sforce.com/schemas/class/g1',
              'm1Response',
              'gg1.m1Response_element'}
            );
        }
    }
}